{"ast":null,"code":"'use strict';\n\nconst object = {};\nconst hasOwnProperty = object.hasOwnProperty;\nconst forOwn = (object, callback) => {\n  for (const key in object) {\n    if (hasOwnProperty.call(object, key)) {\n      callback(key, object[key]);\n    }\n  }\n};\nconst extend = (destination, source) => {\n  if (!source) {\n    return destination;\n  }\n  forOwn(source, (key, value) => {\n    destination[key] = value;\n  });\n  return destination;\n};\nconst forEach = (array, callback) => {\n  const length = array.length;\n  let index = -1;\n  while (++index < length) {\n    callback(array[index]);\n  }\n};\nconst fourHexEscape = hex => {\n  return '\\\\u' + ('0000' + hex).slice(-4);\n};\nconst hexadecimal = (code, lowercase) => {\n  let hexadecimal = code.toString(16);\n  if (lowercase) return hexadecimal;\n  return hexadecimal.toUpperCase();\n};\nconst toString = object.toString;\nconst isArray = Array.isArray;\nconst isBuffer = value => {\n  return typeof Buffer === 'function' && Buffer.isBuffer(value);\n};\nconst isObject = value => {\n  // This is a very simple check, but it’s good enough for what we need.\n  return toString.call(value) == '[object Object]';\n};\nconst isString = value => {\n  return typeof value == 'string' || toString.call(value) == '[object String]';\n};\nconst isNumber = value => {\n  return typeof value == 'number' || toString.call(value) == '[object Number]';\n};\nconst isBigInt = value => {\n  return typeof value == 'bigint';\n};\nconst isFunction = value => {\n  return typeof value == 'function';\n};\nconst isMap = value => {\n  return toString.call(value) == '[object Map]';\n};\nconst isSet = value => {\n  return toString.call(value) == '[object Set]';\n};\n\n/*--------------------------------------------------------------------------*/\n\n// https://mathiasbynens.be/notes/javascript-escapes#single\nconst singleEscapes = {\n  '\\\\': '\\\\\\\\',\n  '\\b': '\\\\b',\n  '\\f': '\\\\f',\n  '\\n': '\\\\n',\n  '\\r': '\\\\r',\n  '\\t': '\\\\t'\n  // `\\v` is omitted intentionally, because in IE < 9, '\\v' == 'v'.\n  // '\\v': '\\\\x0B'\n};\nconst regexSingleEscape = /[\\\\\\b\\f\\n\\r\\t]/;\nconst regexDigit = /[0-9]/;\nconst regexWhitespace = /[\\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/;\nconst escapeEverythingRegex = /([\\uD800-\\uDBFF][\\uDC00-\\uDFFF])|([\\uD800-\\uDFFF])|(['\"`])|[^]/g;\nconst escapeNonAsciiRegex = /([\\uD800-\\uDBFF][\\uDC00-\\uDFFF])|([\\uD800-\\uDFFF])|(['\"`])|[^ !#-&\\(-\\[\\]-_a-~]/g;\nconst jsesc = (argument, options) => {\n  const increaseIndentation = () => {\n    oldIndent = indent;\n    ++options.indentLevel;\n    indent = options.indent.repeat(options.indentLevel);\n  };\n  // Handle options\n  const defaults = {\n    'escapeEverything': false,\n    'minimal': false,\n    'isScriptContext': false,\n    'quotes': 'single',\n    'wrap': false,\n    'es6': false,\n    'json': false,\n    'compact': true,\n    'lowercaseHex': false,\n    'numbers': 'decimal',\n    'indent': '\\t',\n    'indentLevel': 0,\n    '__inline1__': false,\n    '__inline2__': false\n  };\n  const json = options && options.json;\n  if (json) {\n    defaults.quotes = 'double';\n    defaults.wrap = true;\n  }\n  options = extend(defaults, options);\n  if (options.quotes != 'single' && options.quotes != 'double' && options.quotes != 'backtick') {\n    options.quotes = 'single';\n  }\n  const quote = options.quotes == 'double' ? '\"' : options.quotes == 'backtick' ? '`' : '\\'';\n  const compact = options.compact;\n  const lowercaseHex = options.lowercaseHex;\n  let indent = options.indent.repeat(options.indentLevel);\n  let oldIndent = '';\n  const inline1 = options.__inline1__;\n  const inline2 = options.__inline2__;\n  const newLine = compact ? '' : '\\n';\n  let result;\n  let isEmpty = true;\n  const useBinNumbers = options.numbers == 'binary';\n  const useOctNumbers = options.numbers == 'octal';\n  const useDecNumbers = options.numbers == 'decimal';\n  const useHexNumbers = options.numbers == 'hexadecimal';\n  if (json && argument && isFunction(argument.toJSON)) {\n    argument = argument.toJSON();\n  }\n  if (!isString(argument)) {\n    if (isMap(argument)) {\n      if (argument.size == 0) {\n        return 'new Map()';\n      }\n      if (!compact) {\n        options.__inline1__ = true;\n        options.__inline2__ = false;\n      }\n      return 'new Map(' + jsesc(Array.from(argument), options) + ')';\n    }\n    if (isSet(argument)) {\n      if (argument.size == 0) {\n        return 'new Set()';\n      }\n      return 'new Set(' + jsesc(Array.from(argument), options) + ')';\n    }\n    if (isBuffer(argument)) {\n      if (argument.length == 0) {\n        return 'Buffer.from([])';\n      }\n      return 'Buffer.from(' + jsesc(Array.from(argument), options) + ')';\n    }\n    if (isArray(argument)) {\n      result = [];\n      options.wrap = true;\n      if (inline1) {\n        options.__inline1__ = false;\n        options.__inline2__ = true;\n      }\n      if (!inline2) {\n        increaseIndentation();\n      }\n      forEach(argument, value => {\n        isEmpty = false;\n        if (inline2) {\n          options.__inline2__ = false;\n        }\n        result.push((compact || inline2 ? '' : indent) + jsesc(value, options));\n      });\n      if (isEmpty) {\n        return '[]';\n      }\n      if (inline2) {\n        return '[' + result.join(', ') + ']';\n      }\n      return '[' + newLine + result.join(',' + newLine) + newLine + (compact ? '' : oldIndent) + ']';\n    } else if (isNumber(argument) || isBigInt(argument)) {\n      if (json) {\n        // Some number values (e.g. `Infinity`) cannot be represented in JSON.\n        // `BigInt` values less than `-Number.MAX_VALUE` or greater than\n        // `Number.MAX_VALUE` cannot be represented in JSON so they will become\n        // `-Infinity` or `Infinity`, respectively, and then become `null` when\n        // stringified.\n        return JSON.stringify(Number(argument));\n      }\n      let result;\n      if (useDecNumbers) {\n        result = String(argument);\n      } else if (useHexNumbers) {\n        let hexadecimal = argument.toString(16);\n        if (!lowercaseHex) {\n          hexadecimal = hexadecimal.toUpperCase();\n        }\n        result = '0x' + hexadecimal;\n      } else if (useBinNumbers) {\n        result = '0b' + argument.toString(2);\n      } else if (useOctNumbers) {\n        result = '0o' + argument.toString(8);\n      }\n      if (isBigInt(argument)) {\n        return result + 'n';\n      }\n      return result;\n    } else if (isBigInt(argument)) {\n      if (json) {\n        // `BigInt` values less than `-Number.MAX_VALUE` or greater than\n        // `Number.MAX_VALUE` will become `-Infinity` or `Infinity`,\n        // respectively, and cannot be represented in JSON.\n        return JSON.stringify(Number(argument));\n      }\n      return argument + 'n';\n    } else if (!isObject(argument)) {\n      if (json) {\n        // For some values (e.g. `undefined`, `function` objects),\n        // `JSON.stringify(value)` returns `undefined` (which isn’t valid\n        // JSON) instead of `'null'`.\n        return JSON.stringify(argument) || 'null';\n      }\n      return String(argument);\n    } else {\n      // it’s an object\n      result = [];\n      options.wrap = true;\n      increaseIndentation();\n      forOwn(argument, (key, value) => {\n        isEmpty = false;\n        result.push((compact ? '' : indent) + jsesc(key, options) + ':' + (compact ? '' : ' ') + jsesc(value, options));\n      });\n      if (isEmpty) {\n        return '{}';\n      }\n      return '{' + newLine + result.join(',' + newLine) + newLine + (compact ? '' : oldIndent) + '}';\n    }\n  }\n  const regex = options.escapeEverything ? escapeEverythingRegex : escapeNonAsciiRegex;\n  result = argument.replace(regex, (char, pair, lone, quoteChar, index, string) => {\n    if (pair) {\n      if (options.minimal) return pair;\n      const first = pair.charCodeAt(0);\n      const second = pair.charCodeAt(1);\n      if (options.es6) {\n        // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        const codePoint = (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        const hex = hexadecimal(codePoint, lowercaseHex);\n        return '\\\\u{' + hex + '}';\n      }\n      return fourHexEscape(hexadecimal(first, lowercaseHex)) + fourHexEscape(hexadecimal(second, lowercaseHex));\n    }\n    if (lone) {\n      return fourHexEscape(hexadecimal(lone.charCodeAt(0), lowercaseHex));\n    }\n    if (char == '\\0' && !json && !regexDigit.test(string.charAt(index + 1))) {\n      return '\\\\0';\n    }\n    if (quoteChar) {\n      if (quoteChar == quote || options.escapeEverything) {\n        return '\\\\' + quoteChar;\n      }\n      return quoteChar;\n    }\n    if (regexSingleEscape.test(char)) {\n      // no need for a `hasOwnProperty` check here\n      return singleEscapes[char];\n    }\n    if (options.minimal && !regexWhitespace.test(char)) {\n      return char;\n    }\n    const hex = hexadecimal(char.charCodeAt(0), lowercaseHex);\n    if (json || hex.length > 2) {\n      return fourHexEscape(hex);\n    }\n    return '\\\\x' + ('00' + hex).slice(-2);\n  });\n  if (quote == '`') {\n    result = result.replace(/\\$\\{/g, '\\\\${');\n  }\n  if (options.isScriptContext) {\n    // https://mathiasbynens.be/notes/etago\n    result = result.replace(/<\\/(script|style)/gi, '<\\\\/$1').replace(/<!--/g, json ? '\\\\u003C!--' : '\\\\x3C!--');\n  }\n  if (options.wrap) {\n    result = quote + result + quote;\n  }\n  return result;\n};\njsesc.version = '3.0.2';\nmodule.exports = jsesc;","map":{"version":3,"names":["object","hasOwnProperty","forOwn","callback","key","call","extend","destination","source","value","forEach","array","length","index","fourHexEscape","hex","slice","hexadecimal","code","lowercase","toString","toUpperCase","isArray","Array","isBuffer","Buffer","isObject","isString","isNumber","isBigInt","isFunction","isMap","isSet","singleEscapes","regexSingleEscape","regexDigit","regexWhitespace","escapeEverythingRegex","escapeNonAsciiRegex","jsesc","argument","options","increaseIndentation","oldIndent","indent","indentLevel","repeat","defaults","json","quotes","wrap","quote","compact","lowercaseHex","inline1","__inline1__","inline2","__inline2__","newLine","result","isEmpty","useBinNumbers","numbers","useOctNumbers","useDecNumbers","useHexNumbers","toJSON","size","from","push","join","JSON","stringify","Number","String","regex","escapeEverything","replace","char","pair","lone","quoteChar","string","minimal","first","charCodeAt","second","es6","codePoint","test","charAt","isScriptContext","version","module","exports"],"sources":["/Users/maliktarashev/gametracker-react-redux/ui/node_modules/jsesc/jsesc.js"],"sourcesContent":["'use strict';\n\nconst object = {};\nconst hasOwnProperty = object.hasOwnProperty;\nconst forOwn = (object, callback) => {\n\tfor (const key in object) {\n\t\tif (hasOwnProperty.call(object, key)) {\n\t\t\tcallback(key, object[key]);\n\t\t}\n\t}\n};\n\nconst extend = (destination, source) => {\n\tif (!source) {\n\t\treturn destination;\n\t}\n\tforOwn(source, (key, value) => {\n\t\tdestination[key] = value;\n\t});\n\treturn destination;\n};\n\nconst forEach = (array, callback) => {\n\tconst length = array.length;\n\tlet index = -1;\n\twhile (++index < length) {\n\t\tcallback(array[index]);\n\t}\n};\n\nconst fourHexEscape = (hex) => {\n\treturn '\\\\u' + ('0000' + hex).slice(-4);\n}\n\nconst hexadecimal = (code, lowercase) => {\n\tlet hexadecimal = code.toString(16);\n\tif (lowercase) return hexadecimal;\n\treturn hexadecimal.toUpperCase();\n};\n\nconst toString = object.toString;\nconst isArray = Array.isArray;\nconst isBuffer = (value) => {\n\treturn typeof Buffer === 'function' && Buffer.isBuffer(value);\n};\nconst isObject = (value) => {\n\t// This is a very simple check, but it’s good enough for what we need.\n\treturn toString.call(value) == '[object Object]';\n};\nconst isString = (value) => {\n\treturn typeof value == 'string' ||\n\t\ttoString.call(value) == '[object String]';\n};\nconst isNumber = (value) => {\n\treturn typeof value == 'number' ||\n\t\ttoString.call(value) == '[object Number]';\n};\nconst isBigInt = (value) => {\n  return typeof value == 'bigint';\n};\nconst isFunction = (value) => {\n\treturn typeof value == 'function';\n};\nconst isMap = (value) => {\n\treturn toString.call(value) == '[object Map]';\n};\nconst isSet = (value) => {\n\treturn toString.call(value) == '[object Set]';\n};\n\n/*--------------------------------------------------------------------------*/\n\n// https://mathiasbynens.be/notes/javascript-escapes#single\nconst singleEscapes = {\n\t'\\\\': '\\\\\\\\',\n\t'\\b': '\\\\b',\n\t'\\f': '\\\\f',\n\t'\\n': '\\\\n',\n\t'\\r': '\\\\r',\n\t'\\t': '\\\\t'\n\t// `\\v` is omitted intentionally, because in IE < 9, '\\v' == 'v'.\n\t// '\\v': '\\\\x0B'\n};\nconst regexSingleEscape = /[\\\\\\b\\f\\n\\r\\t]/;\n\nconst regexDigit = /[0-9]/;\nconst regexWhitespace = /[\\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/;\n\nconst escapeEverythingRegex = /([\\uD800-\\uDBFF][\\uDC00-\\uDFFF])|([\\uD800-\\uDFFF])|(['\"`])|[^]/g;\nconst escapeNonAsciiRegex = /([\\uD800-\\uDBFF][\\uDC00-\\uDFFF])|([\\uD800-\\uDFFF])|(['\"`])|[^ !#-&\\(-\\[\\]-_a-~]/g;\n\nconst jsesc = (argument, options) => {\n\tconst increaseIndentation = () => {\n\t\toldIndent = indent;\n\t\t++options.indentLevel;\n\t\tindent = options.indent.repeat(options.indentLevel)\n\t};\n\t// Handle options\n\tconst defaults = {\n\t\t'escapeEverything': false,\n\t\t'minimal': false,\n\t\t'isScriptContext': false,\n\t\t'quotes': 'single',\n\t\t'wrap': false,\n\t\t'es6': false,\n\t\t'json': false,\n\t\t'compact': true,\n\t\t'lowercaseHex': false,\n\t\t'numbers': 'decimal',\n\t\t'indent': '\\t',\n\t\t'indentLevel': 0,\n\t\t'__inline1__': false,\n\t\t'__inline2__': false\n\t};\n\tconst json = options && options.json;\n\tif (json) {\n\t\tdefaults.quotes = 'double';\n\t\tdefaults.wrap = true;\n\t}\n\toptions = extend(defaults, options);\n\tif (\n\t\toptions.quotes != 'single' &&\n\t\toptions.quotes != 'double' &&\n\t\toptions.quotes != 'backtick'\n\t) {\n\t\toptions.quotes = 'single';\n\t}\n\tconst quote = options.quotes == 'double' ?\n\t\t'\"' :\n\t\t(options.quotes == 'backtick' ?\n\t\t\t'`' :\n\t\t\t'\\''\n\t\t);\n\tconst compact = options.compact;\n\tconst lowercaseHex = options.lowercaseHex;\n\tlet indent = options.indent.repeat(options.indentLevel);\n\tlet oldIndent = '';\n\tconst inline1 = options.__inline1__;\n\tconst inline2 = options.__inline2__;\n\tconst newLine = compact ? '' : '\\n';\n\tlet result;\n\tlet isEmpty = true;\n\tconst useBinNumbers = options.numbers == 'binary';\n\tconst useOctNumbers = options.numbers == 'octal';\n\tconst useDecNumbers = options.numbers == 'decimal';\n\tconst useHexNumbers = options.numbers == 'hexadecimal';\n\n\tif (json && argument && isFunction(argument.toJSON)) {\n\t\targument = argument.toJSON();\n\t}\n\n\tif (!isString(argument)) {\n\t\tif (isMap(argument)) {\n\t\t\tif (argument.size == 0) {\n\t\t\t\treturn 'new Map()';\n\t\t\t}\n\t\t\tif (!compact) {\n\t\t\t\toptions.__inline1__ = true;\n\t\t\t\toptions.__inline2__ = false;\n\t\t\t}\n\t\t\treturn 'new Map(' + jsesc(Array.from(argument), options) + ')';\n\t\t}\n\t\tif (isSet(argument)) {\n\t\t\tif (argument.size == 0) {\n\t\t\t\treturn 'new Set()';\n\t\t\t}\n\t\t\treturn 'new Set(' + jsesc(Array.from(argument), options) + ')';\n\t\t}\n\t\tif (isBuffer(argument)) {\n\t\t\tif (argument.length == 0) {\n\t\t\t\treturn 'Buffer.from([])';\n\t\t\t}\n\t\t\treturn 'Buffer.from(' + jsesc(Array.from(argument), options) + ')';\n\t\t}\n\t\tif (isArray(argument)) {\n\t\t\tresult = [];\n\t\t\toptions.wrap = true;\n\t\t\tif (inline1) {\n\t\t\t\toptions.__inline1__ = false;\n\t\t\t\toptions.__inline2__ = true;\n\t\t\t}\n\t\t\tif (!inline2) {\n\t\t\t\tincreaseIndentation();\n\t\t\t}\n\t\t\tforEach(argument, (value) => {\n\t\t\t\tisEmpty = false;\n\t\t\t\tif (inline2) {\n\t\t\t\t\toptions.__inline2__ = false;\n\t\t\t\t}\n\t\t\t\tresult.push(\n\t\t\t\t\t(compact || inline2 ? '' : indent) +\n\t\t\t\t\tjsesc(value, options)\n\t\t\t\t);\n\t\t\t});\n\t\t\tif (isEmpty) {\n\t\t\t\treturn '[]';\n\t\t\t}\n\t\t\tif (inline2) {\n\t\t\t\treturn '[' + result.join(', ') + ']';\n\t\t\t}\n\t\t\treturn '[' + newLine + result.join(',' + newLine) + newLine +\n\t\t\t\t(compact ? '' : oldIndent) + ']';\n\t\t} else if (isNumber(argument) || isBigInt(argument)) {\n\t\t\tif (json) {\n\t\t\t\t// Some number values (e.g. `Infinity`) cannot be represented in JSON.\n\t\t\t\t// `BigInt` values less than `-Number.MAX_VALUE` or greater than\n        // `Number.MAX_VALUE` cannot be represented in JSON so they will become\n        // `-Infinity` or `Infinity`, respectively, and then become `null` when\n        // stringified.\n\t\t\t\treturn JSON.stringify(Number(argument));\n\t\t\t}\n\n      let result;\n\t\t\tif (useDecNumbers) {\n\t\t\t\tresult = String(argument);\n\t\t\t} else if (useHexNumbers) {\n\t\t\t\tlet hexadecimal = argument.toString(16);\n\t\t\t\tif (!lowercaseHex) {\n\t\t\t\t\thexadecimal = hexadecimal.toUpperCase();\n\t\t\t\t}\n\t\t\t\tresult = '0x' + hexadecimal;\n\t\t\t} else if (useBinNumbers) {\n\t\t\t\tresult = '0b' + argument.toString(2);\n\t\t\t} else if (useOctNumbers) {\n\t\t\t\tresult = '0o' + argument.toString(8);\n\t\t\t}\n\n      if (isBigInt(argument)) {\n        return result + 'n';\n      }\n      return result;\n\t\t} else if (isBigInt(argument)) {\n\t\t\tif (json) {\n\t\t\t\t// `BigInt` values less than `-Number.MAX_VALUE` or greater than\n        // `Number.MAX_VALUE` will become `-Infinity` or `Infinity`,\n        // respectively, and cannot be represented in JSON.\n\t\t\t\treturn JSON.stringify(Number(argument));\n\t\t\t}\n      return argument + 'n';\n    } else if (!isObject(argument)) {\n\t\t\tif (json) {\n\t\t\t\t// For some values (e.g. `undefined`, `function` objects),\n\t\t\t\t// `JSON.stringify(value)` returns `undefined` (which isn’t valid\n\t\t\t\t// JSON) instead of `'null'`.\n\t\t\t\treturn JSON.stringify(argument) || 'null';\n\t\t\t}\n\t\t\treturn String(argument);\n\t\t} else { // it’s an object\n\t\t\tresult = [];\n\t\t\toptions.wrap = true;\n\t\t\tincreaseIndentation();\n\t\t\tforOwn(argument, (key, value) => {\n\t\t\t\tisEmpty = false;\n\t\t\t\tresult.push(\n\t\t\t\t\t(compact ? '' : indent) +\n\t\t\t\t\tjsesc(key, options) + ':' +\n\t\t\t\t\t(compact ? '' : ' ') +\n\t\t\t\t\tjsesc(value, options)\n\t\t\t\t);\n\t\t\t});\n\t\t\tif (isEmpty) {\n\t\t\t\treturn '{}';\n\t\t\t}\n\t\t\treturn '{' + newLine + result.join(',' + newLine) + newLine +\n\t\t\t\t(compact ? '' : oldIndent) + '}';\n\t\t}\n\t}\n\n\tconst regex = options.escapeEverything ? escapeEverythingRegex : escapeNonAsciiRegex;\n\tresult = argument.replace(regex, (char, pair, lone, quoteChar, index, string) => {\n\t\tif (pair) {\n\t\t\tif (options.minimal) return pair;\n\t\t\tconst first = pair.charCodeAt(0);\n\t\t\tconst second = pair.charCodeAt(1);\n\t\t\tif (options.es6) {\n\t\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\t\tconst codePoint = (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n\t\t\t\tconst hex = hexadecimal(codePoint, lowercaseHex);\n\t\t\t\treturn '\\\\u{' + hex + '}';\n\t\t\t}\n\t\t\treturn fourHexEscape(hexadecimal(first, lowercaseHex)) + fourHexEscape(hexadecimal(second, lowercaseHex));\n\t\t}\n\n\t\tif (lone) {\n\t\t\treturn fourHexEscape(hexadecimal(lone.charCodeAt(0), lowercaseHex));\n\t\t}\n\n\t\tif (\n\t\t\tchar == '\\0' &&\n\t\t\t!json &&\n\t\t\t!regexDigit.test(string.charAt(index + 1))\n\t\t) {\n\t\t\treturn '\\\\0';\n\t\t}\n\n\t\tif (quoteChar) {\n\t\t\tif (quoteChar == quote || options.escapeEverything) {\n\t\t\t\treturn '\\\\' + quoteChar;\n\t\t\t}\n\t\t\treturn quoteChar;\n\t\t}\n\n\t\tif (regexSingleEscape.test(char)) {\n\t\t\t// no need for a `hasOwnProperty` check here\n\t\t\treturn singleEscapes[char];\n\t\t}\n\n\t\tif (options.minimal && !regexWhitespace.test(char)) {\n\t\t\treturn char;\n\t\t}\n\n\t\tconst hex = hexadecimal(char.charCodeAt(0), lowercaseHex);\n\t\tif (json || hex.length > 2) {\n\t\t\treturn fourHexEscape(hex);\n\t\t}\n\n\t\treturn '\\\\x' + ('00' + hex).slice(-2);\n\t});\n\n\tif (quote == '`') {\n\t\tresult = result.replace(/\\$\\{/g, '\\\\${');\n\t}\n\tif (options.isScriptContext) {\n\t\t// https://mathiasbynens.be/notes/etago\n\t\tresult = result\n\t\t\t.replace(/<\\/(script|style)/gi, '<\\\\/$1')\n\t\t\t.replace(/<!--/g, json ? '\\\\u003C!--' : '\\\\x3C!--');\n\t}\n\tif (options.wrap) {\n\t\tresult = quote + result + quote;\n\t}\n\treturn result;\n};\n\njsesc.version = '3.0.2';\n\nmodule.exports = jsesc;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}