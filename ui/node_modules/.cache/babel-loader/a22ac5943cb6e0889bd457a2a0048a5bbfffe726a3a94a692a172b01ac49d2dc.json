{"ast":null,"code":"import { createSlice, nanoid } from '@reduxjs/toolkit';\nconst gamesSlice = createSlice({\n  name: 'games',\n  initialState: [],\n  reducers: {\n    addGame: {\n      reducer(state, action) {\n        state.push(action.payload);\n      },\n      prepare(title, price) {\n        return {\n          payload: {\n            id: nanoid(),\n            title,\n            price,\n            isFavorite: false\n          }\n        };\n      }\n    },\n    deleteGame: (state, action) => {\n      return state.filter(game => game.id !== action.payload);\n    },\n    toggleFavorite: (state, action) => {\n      const game = state.find(game => game.id === action.payload);\n      if (game) {\n        game.isFavorite = !game.isFavorite;\n      }\n    },\n    clearAllGames: () => []\n  }\n});\nexport const {\n  addGame,\n  deleteGame,\n  toggleFavorite,\n  clearAllGames\n} = gamesSlice.actions;\nexport default gamesSlice.reducer;","map":{"version":3,"names":["createSlice","nanoid","gamesSlice","name","initialState","reducers","addGame","reducer","state","action","push","payload","prepare","title","price","id","isFavorite","deleteGame","filter","game","toggleFavorite","find","clearAllGames","actions"],"sources":["/Users/maliktarashev/gametracker-react-redux-extended/ui/src/redux/slices/gamesSlice.js"],"sourcesContent":["import { createSlice, nanoid } from '@reduxjs/toolkit'\n\nconst gamesSlice = createSlice({\n    name: 'games',\n    initialState: [],\n    reducers: {\n        addGame: {\n            reducer(state, action) {\n                state.push(action.payload)\n            },\n            prepare(title, price) {\n                return {\n                    payload: {\n                        id: nanoid(),\n                        title,\n                        price,\n                        isFavorite: false\n                    }\n                }\n            }\n        },\n        deleteGame: (state, action) => {\n            return state.filter(game => game.id !== action.payload)\n        },\n        toggleFavorite: (state, action) => {\n            const game = state.find(game => game.id === action.payload)\n            if (game) {\n                game.isFavorite = !game.isFavorite\n            }\n        },\n        clearAllGames: () => []\n    }\n})\n\nexport const { addGame, deleteGame, toggleFavorite, clearAllGames } = gamesSlice.actions\nexport default gamesSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,EAAEC,MAAM,QAAQ,kBAAkB;AAEtD,MAAMC,UAAU,GAAGF,WAAW,CAAC;EAC3BG,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACNC,OAAO,EAAE;MACLC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;QACnBD,KAAK,CAACE,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;MAC9B,CAAC;MACDC,OAAOA,CAACC,KAAK,EAAEC,KAAK,EAAE;QAClB,OAAO;UACHH,OAAO,EAAE;YACLI,EAAE,EAAEd,MAAM,CAAC,CAAC;YACZY,KAAK;YACLC,KAAK;YACLE,UAAU,EAAE;UAChB;QACJ,CAAC;MACL;IACJ,CAAC;IACDC,UAAU,EAAEA,CAACT,KAAK,EAAEC,MAAM,KAAK;MAC3B,OAAOD,KAAK,CAACU,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACJ,EAAE,KAAKN,MAAM,CAACE,OAAO,CAAC;IAC3D,CAAC;IACDS,cAAc,EAAEA,CAACZ,KAAK,EAAEC,MAAM,KAAK;MAC/B,MAAMU,IAAI,GAAGX,KAAK,CAACa,IAAI,CAACF,IAAI,IAAIA,IAAI,CAACJ,EAAE,KAAKN,MAAM,CAACE,OAAO,CAAC;MAC3D,IAAIQ,IAAI,EAAE;QACNA,IAAI,CAACH,UAAU,GAAG,CAACG,IAAI,CAACH,UAAU;MACtC;IACJ,CAAC;IACDM,aAAa,EAAEA,CAAA,KAAM;EACzB;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEhB,OAAO;EAAEW,UAAU;EAAEG,cAAc;EAAEE;AAAc,CAAC,GAAGpB,UAAU,CAACqB,OAAO;AACxF,eAAerB,UAAU,CAACK,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}